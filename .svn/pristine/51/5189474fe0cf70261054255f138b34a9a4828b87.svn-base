import React, { useState } from 'react';
import { Card, Dropdown, Menu, Image } from 'antd';
import {
  FileWordTwoTone,
  StarOutlined,
  LinkOutlined,
  LikeOutlined,
  MessageOutlined,
  ShareAltOutlined,
  EyeOutlined,
  StarFilled,
} from '@ant-design/icons';
import styles from './index.less';

const BASE_IP = '/images';

const replaceIP = url => {
  const urlObj = new URL(url);
  return `${BASE_IP}${urlObj.pathname}`;
};

const DashboardCard = ({
  img,
  sourceName,
  title,
  content,
  link,
  images, // 图片数组
  videos, // 视频数组
  likeNum,
  commentNum,
  shareNum,
  readNum,
  showActions = true,
  onClickContent,
  publishTime,
  lang,
  onExport,
  ...props
}) => {
  const [isCollected, setIsCollected] = useState(false);

  const handleMenuClick = e => {
    setIsCollected(!isCollected);
  };

  const menu = (
    <Menu onClick={handleMenuClick}>
      <Menu.Item key="0">默认收藏夹</Menu.Item>
      <Menu.Item key="1">工作收藏夹</Menu.Item>
      <Menu.Item key="2">个人收藏夹</Menu.Item>
    </Menu>
  );

  const imagesArray = Array.isArray(images) ? images : images ? JSON.parse(images) : [];
  const videosArray = Array.isArray(videos) ? videos : videos ? JSON.parse(videos) : [];

  const imagesWithNewIP = imagesArray.map(src => replaceIP(src));
  const videosWithNewIP = videosArray.map(src => replaceIP(src));
  // console.log(videosWithNewIP);

  return (
    <Card className={styles.cardStyle}>
      <p className={styles.topCard}>
        <span className={styles.topLeft} onClick={onClickContent}>
          <span className={styles.topImg}>
            <img
              style={{ width: '20px', height: '20px', marginRight: '12px' }}
              src={img}
              alt="Logo"
            />
            <span className={styles.topLeft1}>{sourceName}</span>
          </span>
          <span style={{ width: '149px' }}>{publishTime}</span>
        </span>
        <span className={styles.topRight}>
          <span style={{ display: 'flex', lineHeight: '20px' }}>
            <FileWordTwoTone style={{ fontSize: '22px', marginRight: '2px' }} />
            <a style={{ color: 'white' }} onClick={onExport}>
              导出
            </a>
          </span>
          <span style={{ display: 'flex', lineHeight: '20px' }}>
            {isCollected ? (
              <StarFilled style={{ fontSize: '22px', marginRight: '2px', color: 'orange' }} />
            ) : (
              <StarOutlined style={{ fontSize: '22px', marginRight: '2px', color: 'orange' }} />
            )}
            <Dropdown overlay={menu} placement="bottomCenter" trigger={['click']}>
              <a style={{ color: 'white' }} className="ant-dropdown-link">
                {isCollected ? '取消收藏' : '收藏'}
              </a>
            </Dropdown>
          </span>
        </span>
      </p>
      <div onClick={onClickContent}>
        <h3 style={{ color: 'white', fontWeight: 'bolder' }}>{title || ''}</h3>
        <p className={styles.pContent}>{content}</p>
      </div>
      {showActions && (
        <p style={{ display: 'flex', width: '25%', justifyContent: 'space-between' }}>
          <span>
            <LikeOutlined />
            <span>{likeNum || 0}</span>
          </span>
          <span>
            <MessageOutlined />
            <span>{commentNum || 0}</span>
          </span>
          <span>
            <ShareAltOutlined />
            <span>{shareNum || 0}</span>
          </span>
          <span>
            <EyeOutlined />
            <span>{readNum || 0}</span>
          </span>
        </p>
      )}
      {link && (
        <p
          style={{
            maxWidth: '100%',
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
          }}
        >
          <LinkOutlined style={{ marginRight: '4px' }} />
          <a href={link} target="_blank" rel="noopener noreferrer">
            {link}
          </a>
        </p>
      )}
      {(imagesArray.length > 0 || videosArray.length > 0) && (
        <div className={styles.mediaContainer} style={{ display: 'flex', overflowX: 'auto' }}>
          {imagesWithNewIP.map((src, index) => (
            <Image
              key={index}
              src={src}
              alt="Logo"
              style={{ width: '150px', height: '100px', marginRight: '8px' }}
            />
          ))}
          {videosWithNewIP.map((src, index) => (
            <video
              key={index}
              controls
              style={{ width: '150px', height: '100px', marginRight: '8px' }}
            >
              <source src={src} type="video/mp4" />
            </video>
          ))}
        </div>
      )}
    </Card>
  );
};

export default DashboardCard;
